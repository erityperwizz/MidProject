# Set labels and theme
labs(title = "Economic Impact of COVID-19 on Tourism",
x = "By Country", y = "By Loss in Billion", fill = "Year") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Load necessary libraries
library(ggplot2)
# Create a bar plot comparing the losses for 2019 and 2020 by country
plot1 = ggplot(data_filtered, aes(x = Country, y = Loss.in.Billion, fill = as.factor(Year))) +
geom_bar(stat = "identity", position = "dodge") +
# Add text labels on top of the bars showing the exact loss values
geom_text(aes(label = Loss.in.Billion),
position = position_dodge(width = 0.9),
vjust = -0.5) +  # Adjust vertical position of labels
# Use custom colors: purple for 2019 and yellow for 2020
scale_fill_manual(values = c("2019" = "purple", "2020" = "orange")) +
# Set labels and theme
labs(title = "Economic Impact of COVID-19 on Tourism",
x = "By Country", y = "By Loss in Billion", fill = "Year") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("C:\\Users\\jeeva\\OneDrive\\Desktop\\STAT - First sem\\Mid Project\\Mid Project\\plot1_high_res.png", plot = plot1, dpi = 300, width = 8, height = 6, units = "in")
# Load necessary libraries
library(ggplot2)
# Create a bar plot comparing the losses for 2019 and 2020 by country
plot1 = ggplot(data_filtered, aes(x = Country, y = Loss.in.Billion, fill = as.factor(Year))) +
geom_bar(stat = "identity", position = "dodge") +
# Add text labels on top of the bars showing the exact loss values
geom_text(aes(label = Loss.in.Billion),
position = position_dodge(width = 0.9),
vjust = -0.5) +  # Adjust vertical position of labels
# Use custom colors: purple for 2019 and yellow for 2020
scale_fill_manual(values = c("2019" = "purple", "2020" = "orange")) +
# Set labels and theme
labs(title = "Economic Impact of COVID-19 on Tourism",
x = "By Country", y = "By Loss in Billion", fill = "Year") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Load necessary libraries
library(ggplot2)
# Create a bar plot comparing the losses for 2019 and 2020 by country
plot1 = ggplot(data_filtered, aes(x = Country, y = Loss.in.Billion, fill = as.factor(Year))) +
geom_bar(stat = "identity", position = "dodge") +
# Add text labels on top of the bars showing the exact loss values
geom_text(aes(label = Loss.in.Billion),
position = position_dodge(width = 0.9),
vjust = -0.5) +  # Adjust vertical position of labels
# Use custom colors: purple for 2019 and yellow for 2020
scale_fill_manual(values = c("2019" = "purple", "2020" = "orange")) +
# Set labels and theme
labs(title = "Economic Impact of COVID-19 on Tourism",
x = "By Country", y = "By Loss in Billion", fill = "Year") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(plot1)
# Load necessary libraries
library(ggplot2)
# Create a bar plot comparing the losses for 2019 and 2020 by country
plot1 <- ggplot(data_filtered, aes(x = Country, y = Loss.in.Billion, fill = as.factor(Year))) +
geom_bar(stat = "identity", position = "dodge", width = 0.95) +  # Adjust the bar width here
geom_text(aes(label = Loss.in.Billion),
position = position_dodge(width = 0.95),  # Match this to bar width
vjust = -0.5) +
scale_fill_manual(values = c("2019" = "purple", "2020" = "orange")) +
labs(title = "Loss Comparison by Country for 2019 and 2020",
x = "Country", y = "Loss in Billion", fill = "Year") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(plot1)
# Load necessary libraries
library(ggplot2)
# Create a bar plot comparing the losses for 2019 and 2020 by country
plot1 <- ggplot(data_filtered, aes(x = Country, y = Loss.in.Billion, fill = as.factor(Year))) +
geom_bar(stat = "identity", position = "dodge", width = 1.25) +  # Adjust the bar width here
geom_text(aes(label = Loss.in.Billion),
position = position_dodge(width = 0.95),  # Match this to bar width
vjust = -0.5) +
scale_fill_manual(values = c("2019" = "purple", "2020" = "orange")) +
labs(title = "Loss Comparison by Country for 2019 and 2020",
x = "Country", y = "Loss in Billion", fill = "Year") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(plot1)
# Load necessary libraries
library(ggplot2)
# Create the plot and assign it to an object called plot1
plot1 <- ggplot(data_filtered, aes(x = Country, y = Loss.in.Billion, fill = as.factor(Year))) +
geom_bar(stat = "identity", position = "dodge", width = 0.95) +
# Add text labels on top of the bars, increasing the font size for better visibility
geom_text(aes(label = Loss.in.Billion),
position = position_dodge(width = 0.95),
vjust = -0.5, size = 5) +  # Increase size of the text
# Use custom colors: purple for 2019 and yellow for 2020
scale_fill_manual(values = c("2019" = "purple", "2020" = "yellow")) +
# Set labels and increase title and axis text size
labs(title = "Loss Comparison by Country for 2019 and 2020",
x = "Country", y = "Loss in Billion", fill = "Year") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),  # Increase x-axis text size
axis.text.y = element_text(size = 12),                         # Increase y-axis text size
plot.title = element_text(size = 16, face = "bold"))
print(plot1)
# Load necessary libraries
library(ggplot2)
# Create the plot and assign it to an object called plot1
plot1 = ggplot(data_filtered, aes(x = Country, y = Loss.in.Billion, fill = as.factor(Year))) +
geom_bar(stat = "identity", position = "dodge") +
# Add text labels on top of the bars showing the exact loss values
geom_text(aes(label = Loss.in.Billion),
position = position_dodge(width = 0.9),
vjust = -0.5) +  # Adjust vertical position of labels
# Use custom colors: purple for 2019 and yellow for 2020
scale_fill_manual(values = c("2019" = "purple", "2020" = "yellow")) +
# Set labels and theme
labs(title = "Loss Comparison by Country for 2019 and 2020",
x = "Country", y = "Loss in Billion", fill = "Year") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(plot1)
ggsave("C:\\Users\\jeeva\\OneDrive\\Desktop\\STAT - First sem\\Mid Project\\Mid Project\\plot1_high_res.png", plot = plot1, dpi = 300, width = 14, height = 8, units = "in")
# Load necessary libraries
library(ggplot2)
# Create a lollipop chart showing the difference in loss between 2019 and 2020 by country
ggplot(data_diff, aes(x = Country, y = Difference)) +
geom_segment(aes(x = Country, xend = Country, y = 0, yend = Difference), color = "gray", size = 1.2) +
geom_point(aes(y = Difference), color = "steelblue", size = 4) +
labs(title = "Difference in Loss Between 2019 and 2020 by Country",
x = "Country", y = "Difference in Loss (Billion)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 16, face = "bold"))
# Calculate the difference between 2019 and 2020 losses for each country
library(tidyr) # for spread function
plot2 = data_diff <- spread(data_filtered, Year, Loss.in.Billion)
data_diff$Difference <- data_diff$`2020` - data_diff$`2019`
# Create a bar plot showing the difference in loss between 2019 and 2020
ggplot(data_diff, aes(x = Country, y = Difference)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Difference in Loss Between 2019 and 2020 by Country",
x = "Country", y = "Difference in Loss (Billion)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(plot2)
# Calculate the difference between 2019 and 2020 losses for each country
library(tidyr)  # for spread function
library(dplyr)  # for mutate function
library(ggplot2) # for plotting
# Spread data to have years as columns
data_diff <- spread(data_filtered, Year, Loss.in.Billion)
# Calculate the difference
data_diff <- data_diff %>%
mutate(Difference = `2020` - `2019`)
# Create a bar plot showing the difference in loss between 2019 and 2020 by country
ggplot(data_diff, aes(x = Country, y = Difference, fill = Difference > 0)) +
geom_bar(stat = "identity", position = "identity") +  # Position set to identity for opposite bars
scale_fill_manual(values = c("FALSE" = "red", "TRUE" = "steelblue")) +  # Color based on positive/negative
labs(title = "Difference in Loss Between 2019 and 2020 by Country",
x = "Country", y = "Difference in Loss (Billion)", fill = "Increase") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 16, face = "bold")) +
coord_flip()  # Flip coordinates for horizontal bars
# Calculate the difference between 2019 and 2020 losses for each country
library(tidyr)  # for spread function
library(ggplot2)  # for plotting
# Spread data to have years as columns
data_diff <- spread(data_filtered, Year, Loss.in.Billion)
# Calculate the difference
data_diff$Difference <- data_diff$`2020` - data_diff$`2019`
# Create a bar plot showing the difference in loss between 2019 and 2020 by country
ggplot(data_diff, aes(x = Country, y = Difference)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Difference in Loss Between 2019 and 2020 by Country",
x = "Country", y = "Difference in Loss (Billion)") +
scale_y_continuous(limits = c(min(data_diff$Difference, 0), max(data_diff$Difference))) +  # Set y-axis limits
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 16, face = "bold"))
# Calculate the difference between 2019 and 2020 losses for each country
library(tidyr)  # for spread function
library(ggplot2)  # for plotting
# Spread data to have years as columns
data_diff <- spread(data_filtered, Year, Loss.in.Billion)
# Calculate the difference
data_diff$Difference <- data_diff$`2020` - data_diff$`2019`
# Create a bar plot showing the difference in loss between 2019 and 2020 by country
ggplot(data_diff, aes(x = Country, y = Difference)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Difference in Loss Between 2019 and 2020 by Country",
x = "Country", y = "Difference in Loss (Billion)") +
scale_y_continuous(limits = c(min(data_diff$Difference, 0), max(data_diff$Difference))) +  # Set y-axis limits
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 16, face = "bold"))
# Calculate the difference between 2019 and 2020 losses for each country
library(tidyr)  # for spread function
library(ggplot2)  # for plotting
# Spread data to have years as columns
data_diff <- spread(data_filtered, Year, Loss.in.Billion)
# Calculate the difference
data_diff$Difference <- data_diff$`2020` - data_diff$`2019`
# Create a bar plot showing the difference in loss between 2019 and 2020 by country
ggplot(data_diff, aes(x = Country, y = Difference)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Difference in Loss Between 2019 and 2020 by Country",
x = "Country", y = "Difference in Loss (Billion)") +
scale_y_continuous(limits = c(min(data_diff$Difference), max(data_diff$Difference)),
expand = expansion(mult = c(0.05, 0.05))) +  # Ensure bars fit nicely
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 16, face = "bold")) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red")  # Add a horizontal line at y = 0
# Calculate differences for waterfall chart
data_waterfall <- data_diff %>%
select(Country, `2019`, `2020`) %>%
pivot_longer(cols = c(`2019`, `2020`), names_to = "Year", values_to = "Loss") %>%
group_by(Country) %>%
summarise(Start = first(Loss), End = last(Loss), Difference = End - Start) %>%
ungroup()
# Create a waterfall chart
ggplot(data_waterfall, aes(x = Country)) +
geom_bar(aes(y = Start), stat = "identity", fill = "lightgray") +
geom_bar(aes(y = Difference), stat = "identity", fill = ifelse(data_waterfall$Difference < 0, "red", "steelblue")) +
labs(title = "Waterfall Chart: Loss Transition Between 2019 and 2020",
x = "Country", y = "Loss (Billion)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black")
# Calculate the difference between 2019 and 2020 losses for each country
library(tidyr) # for spread function
data_diff <- spread(data_filtered, Year, Loss.in.Billion)
data_diff$Difference <- data_diff$`2019` - data_diff$`2020`
# Create a bar plot showing the difference in loss between 2019 and 2020
ggplot(data_diff, aes(x = Country, y = Difference)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Difference in Loss Between 2019 and 2020 by Country",
x = "Country", y = "Difference in Loss (Billion)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Calculate the difference between 2019 and 2020 losses for each country
library(tidyr) # for spread function
data_diff <- spread(data_filtered, Year, Loss.in.Billion)
data_diff$Difference <- data_diff$`2019` - data_diff$`2020`
# Create a bar plot showing the difference in loss between 2019 and 2020
ggplot(data_diff, aes(x = Country, y = Difference)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Difference in Loss Between 2019 and 2020 by Country",
x = "Country", y = "Difference in Loss (Billion)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Calculate the difference between 2019 and 2020 losses for each country
library(tidyr) # for spread function
data_diff <- spread(data_filtered, Year, Loss.in.Billion)
data_diff$Difference <- data_diff$`2019` - data_diff$`2020`
# Create a bar plot showing the difference in loss between 2019 and 2020
ggplot(data_diff, aes(x = Country, y = Difference)) +
geom_bar(stat = "identity", fill = "brown2") +
labs(title = "Difference in Loss Between 2019 and 2020 by Country",
x = "Country", y = "Difference in Loss (Billion)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Calculate the difference between 2019 and 2020 losses for each country
library(tidyr) # for spread function
data_diff <- spread(data_filtered, Year, Loss.in.Billion)
data_diff$Difference <- data_diff$`2019` - data_diff$`2020`
# Create a bar plot showing the difference in loss between 2019 and 2020
ggplot(data_diff, aes(x = Country, y = Difference)) +
geom_bar(stat = "identity", fill = "brown2") +
labs(title = "Increase in loss between 2020 and 2019",
x = "Country", y = "Difference in Loss (Billion)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Load necessary libraries
library(tidyr)  # for spread function
library(ggplot2)  # for plotting
# Spread data to have years as columns
data_diff <- spread(data_filtered, Year, Loss.in.Billion)
# Calculate the difference
data_diff$Difference <- data_diff$`2019` - data_diff$`2020`
# Create a bar plot showing the difference in loss between 2019 and 2020
ggplot(data_diff, aes(x = Country, y = Difference)) +
geom_bar(stat = "identity", fill = "brown2") +
labs(title = "Increase in Loss Between 2020 and 2019",
x = "Country", y = "Difference in Loss (Billion)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_text(aes(label = Difference), vjust = -0.5, color = "black")  # Add values on top of the bars
# Load necessary libraries
library(tidyr)  # for spread function
library(ggplot2)  # for plotting
# Spread data to have years as columns
data_diff <- spread(data_filtered, Year, Loss.in.Billion)
# Calculate the difference
data_diff$Difference <- data_diff$`2019` - data_diff$`2020`
# Create a bar plot showing the difference in loss between 2019 and 2020
ggplot(data_diff, aes(x = Country, y = Difference)) +
geom_bar(stat = "identity", fill = "brown2") +
labs(title = "Comparitive Analysis of Loss by Country",
x = "Country", y = "Difference in Loss (Billion)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_text(aes(label = Difference), vjust = -0.5, color = "black")  # Add values on top of the bars
# Load necessary libraries
library(tidyr)  # for spread function
library(ggplot2)  # for plotting
# Spread data to have years as columns
data_diff <- spread(data_filtered, Year, Loss.in.Billion)
# Calculate the difference
data_diff$Difference <- data_diff$`2019` - data_diff$`2020`
# Create a bar plot showing the difference in loss between 2019 and 2020
ggplot(data_diff, aes(x = Country, y = Difference)) +
geom_bar(stat = "identity", fill = "brown2") +
labs(title = "Comparative Analysis of Loss by Country",  # Fixed spelling of 'Comparative'
x = "Country", y = "Difference in Loss (Billion)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)) +  # Center the title
geom_text(aes(label = Difference), vjust = -0.5, color = "black")  # Add values on top of the bars
# Load necessary libraries
library(tidyr)  # for spread function
library(ggplot2)  # for plotting
# Spread data to have years as columns
data_diff <- spread(data_filtered, Year, Loss.in.Billion)
# Calculate the percentage difference
data_diff$Percentage_Difference <- ((data_diff$`2020` - data_diff$`2019`) / data_diff$`2019`) * 100
# Create a bar plot showing the percentage difference in loss between 2019 and 2020
ggplot(data_diff, aes(x = Country, y = Percentage_Difference)) +
geom_bar(stat = "identity", fill = "brown2") +
labs(title = "Percentage Change in Loss by Country (2020 vs. 2019)",
x = "Country", y = "Percentage Difference in Loss (%)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)) +  # Center the title
geom_text(aes(label = round(Percentage_Difference, 1)), vjust = -0.5, color = "black")  # Add values on top of the bars
# Load necessary libraries
library(tidyr)  # for spread function
library(ggplot2)  # for plotting
# Spread data to have years as columns
data_diff <- spread(data_filtered, Year, Loss.in.Billion)
# Calculate the absolute percentage difference
data_diff$Percentage_Difference <- (abs(data_diff$`2020` - data_diff$`2019`) / data_diff$`2019`) * 100
# Create a bar plot showing the absolute percentage difference in loss between 2019 and 2020
ggplot(data_diff, aes(x = Country, y = Percentage_Difference)) +
geom_bar(stat = "identity", fill = "brown2") +
labs(title = "Absolute Percentage Change in Loss by Country (2020 vs. 2019)",
x = "Country", y = "Absolute Percentage Difference in Loss (%)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)) +  # Center the title
geom_text(aes(label = round(Percentage_Difference, 1)), vjust = -0.5, color = "black")  # Add values on top of the bars
# Load necessary libraries
library(tidyr)  # for spread function
library(ggplot2)  # for plotting
# Spread data to have years as columns
data_diff <- spread(data_filtered, Year, Loss.in.Billion)
# Calculate the absolute percentage difference
data_diff$Percentage_Difference <- (abs(data_diff$`2020` - data_diff$`2019`) / data_diff$`2019`) * 100
# Create a bar plot showing the absolute percentage difference in loss between 2019 and 2020
ggplot(data_diff, aes(x = Country, y = Percentage_Difference)) +
geom_bar(stat = "identity", fill = "brown2") +
labs(title = "Comparative Analysis of Loss by Country in Percentage",
x = "Country", y = "Percentage Difference in Loss (%)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)) +  # Center the title
geom_text(aes(label = round(Percentage_Difference, 1)), vjust = -0.5, color = "black")  # Add values on top of the bars
# Load necessary libraries
library(tidyr)  # for spread function
library(ggplot2)  # for plotting
# Spread data to have years as columns
data_diff <- spread(data_filtered, Year, Loss.in.Billion)
# Calculate the absolute percentage difference
data_diff$Percentage_Difference <- (abs(data_diff$`2019` - data_diff$`2020`) / data_diff$`2020`) * 100
# Create a bar plot showing the absolute percentage difference in loss between 2019 and 2020
ggplot(data_diff, aes(x = Country, y = Percentage_Difference)) +
geom_bar(stat = "identity", fill = "brown2") +
labs(title = "Comparative Analysis of Loss by Country in Percentage",
x = "Country", y = "Percentage Difference in Loss (%)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)) +  # Center the title
geom_text(aes(label = round(Percentage_Difference, 1)), vjust = -0.5, color = "black")  # Add values on top of the bars
# Load necessary libraries
library(tidyr)  # for spread function
library(ggplot2)  # for plotting
# Spread data to have years as columns
data_diff <- spread(data_filtered, Year, Loss.in.Billion)
# Calculate the absolute percentage difference
data_diff$Percentage_Difference <- (abs(data_diff$`2019` - data_diff$`2020`) / data_diff$`2019`) * 100
# Create a bar plot showing the absolute percentage difference in loss between 2019 and 2020
ggplot(data_diff, aes(x = Country, y = Percentage_Difference)) +
geom_bar(stat = "identity", fill = "brown2") +
labs(title = "Comparative Analysis of Loss by Country in Percentage",
x = "Country", y = "Percentage Difference in Loss (%)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)) +  # Center the title
geom_text(aes(label = round(Percentage_Difference, 1)), vjust = -0.5, color = "black")  # Add values on top of the bars
# Load necessary libraries
library(tidyr)  # for spread function
library(ggplot2)  # for plotting
# Spread data to have years as columns
data_diff <- spread(data_filtered, Year, Loss.in.Billion)
# Calculate the absolute percentage difference
data_diff$Percentage_Difference <- (abs(data_diff$`2020` - data_diff$`2019`) / data_diff$`2019`) * 100
# Create a bar plot showing the absolute percentage difference in loss between 2019 and 2020
ggplot(data_diff, aes(x = Country, y = Percentage_Difference)) +
geom_bar(stat = "identity", fill = "brown2") +
labs(title = "Comparative Analysis of Loss by Country in Percentage",
x = "Country", y = "Percentage Difference in Loss (%)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)) +  # Center the title
geom_text(aes(label = round(Percentage_Difference, 1)), vjust = -0.5, color = "black")  # Add values on top of the bars
# Load necessary libraries
library(tidyr)  # for spread function
library(ggplot2)  # for plotting
library(dplyr)  # for data manipulation
# Spread data to have years as columns
data_diff <- spread(data_filtered, Year, Loss.in.Billion)
# Calculate the absolute percentage difference
data_diff$Percentage_Difference <- (abs(data_diff$`2020` - data_diff$`2019`) / data_diff$`2019`) * 100
# Sort the data by Percentage_Difference in descending order
data_diff <- data_diff %>%
arrange(desc(Percentage_Difference))
# Create a bar plot showing the absolute percentage difference in loss between 2019 and 2020
ggplot(data_diff, aes(x = reorder(Country, Percentage_Difference), y = Percentage_Difference)) +
geom_bar(stat = "identity", fill = "brown2") +
labs(title = "Absolute Percentage Change in Loss by Country (2020 vs. 2019)",
x = "Country", y = "Absolute Percentage Difference in Loss (%)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)) +  # Center the title
geom_text(aes(label = round(Percentage_Difference, 1)), vjust = -0.5, color = "black")  # Add values on top of the bars
# Load necessary libraries
library(tidyr)  # for spread function
library(ggplot2)  # for plotting
library(dplyr)  # for data manipulation
# Spread data to have years as columns
data_diff <- spread(data_filtered, Year, Loss.in.Billion)
# Calculate the absolute percentage difference
data_diff$Percentage_Difference <- (abs(data_diff$`2020` - data_diff$`2019`) / data_diff$`2019`) * 100
# Create a bar plot showing the absolute percentage difference in loss between 2019 and 2020
ggplot(data_diff, aes(x = reorder(Country, Percentage_Difference), y = Percentage_Difference, fill = Percentage_Difference)) +
geom_bar(stat = "identity") +
scale_fill_gradient(low = "lightblue", high = "darkblue") +  # Light to dark gradient
labs(title = "Comparative Analysis of Loss by Country in Percentage",
x = "Country", y = "Percentage Difference in Loss (%)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)) +  # Center the title
geom_text(aes(label = round(Percentage_Difference, 1)), vjust = -0.5, color = "black")  # Add values on top of the bars
# Load necessary libraries
library(tidyr)  # for spread function
library(ggplot2)  # for plotting
library(dplyr)  # for data manipulation
# Spread data to have years as columns
data_diff <- spread(data_filtered, Year, Loss.in.Billion)
# Calculate the absolute percentage difference and rename it
data_diff$Loss_Percentage <- (abs(data_diff$`2020` - data_diff$`2019`) / data_diff$`2019`) * 100
# Create a bar plot showing the absolute percentage difference in loss between 2019 and 2020
ggplot(data_diff, aes(x = reorder(Country, Loss_Percentage), y = Loss_Percentage, fill = Loss_Percentage)) +
geom_bar(stat = "identity") +
scale_fill_gradient(low = "lightblue", high = "darkblue") +  # Light to dark gradient
labs(title = "Comparative Analysis of Loss by Country in Percentage",
x = "Country", y = "Loss (%)") +  # Updated y-axis label
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)) +  # Center the title
geom_text(aes(label = round(Loss_Percentage, 1)), vjust = -0.5, color = "black")  # Add values on top of the bars
# Load necessary libraries
library(tidyr)  # for spread function
library(ggplot2)  # for plotting
library(dplyr)  # for data manipulation
# Spread data to have years as columns
data_diff <- spread(data_filtered, Year, Loss.in.Billion)
# Calculate the absolute percentage difference and rename it
data_diff$Loss_Percentage <- (abs(data_diff$`2020` - data_diff$`2019`) / data_diff$`2019`) * 100
# Create a bar plot showing the absolute percentage difference in loss between 2019 and 2020
plot2 = ggplot(data_diff, aes(x = reorder(Country, Loss_Percentage), y = Loss_Percentage, fill = Loss_Percentage)) +
geom_bar(stat = "identity") +
scale_fill_gradient(low = "lightblue", high = "darkblue") +  # Light to dark gradient
labs(title = "Comparative Analysis of Loss by Country in Percentage",
x = "Country", y = "Loss (%)") +  # Updated y-axis label
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)) +  # Center the title
geom_text(aes(label = round(Loss_Percentage, 1)), vjust = -0.5, color = "black")  # Add values on top of the bars
print(plot2)
ggsave("C:\\Users\\jeeva\\OneDrive\\Desktop\\STAT - First sem\\Mid Project\\Mid Project\\plot2_high_res.png", plot = plot2, dpi = 300, width = 14, height = 8, units = "in")
install.packages("plotly")  # Uncomment this line to install the package
library(plotly)
# Load necessary libraries
library(ggplot2)
library(plotly)
# Create the plot and assign it to an object called plot1
plot1 <- ggplot(data_filtered, aes(x = Country, y = Loss.in.Billion, fill = as.factor(Year))) +
geom_bar(stat = "identity", position = "dodge") +
# Add text labels on top of the bars showing the exact loss values
geom_text(aes(label = Loss.in.Billion),
position = position_dodge(width = 0.9),
vjust = -0.5) +  # Adjust vertical position of labels
# Use custom colors: purple for 2019 and yellow for 2020
scale_fill_manual(values = c("2019" = "purple", "2020" = "yellow")) +
# Set labels and theme
labs(title = "Loss Comparison by Country for 2019 and 2020",
x = "Country", y = "Loss in Billion", fill = "Year") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Convert to an interactive plot
plotly_plot <- ggplotly(plot1)
# Print the interactive plot
print(plotly_plot)
install.packages("htmlwidgets")
install.packages("htmlwidgets")
#3 Load necessary libraries
library(ggplot2)
library(plotly)
# Save the interactive plot as an HTML file
library(htmlwidgets)
# Create the plot and assign it to an object called plot1
plot1 <- ggplot(data_filtered, aes(x = Country, y = Loss.in.Billion, fill = as.factor(Year))) +
geom_bar(stat = "identity", position = "dodge") +
# Add text labels on top of the bars showing the exact loss values
geom_text(aes(label = Loss.in.Billion),
position = position_dodge(width = 0.9),
vjust = -0.5) +  # Adjust vertical position of labels
# Use custom colors: purple for 2019 and yellow for 2020
scale_fill_manual(values = c("2019" = "purple", "2020" = "yellow")) +
# Set labels and theme
labs(title = "Loss Comparison by Country for 2019 and 2020",
x = "Country", y = "Loss in Billion", fill = "Year") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Convert to an interactive plot
plotly_plot <- ggplotly(plot1)
# Print the interactive plot
print(plotly_plot)
# Save plot as an HTML file
saveWidget(plotly_plot, "interactive_plot.html", selfcontained = TRUE)
<iframe src="interactive_plot.html" width="100%" height="600px" frameborder="0"></iframe>
options(repos = c(CRAN = "https://cloud.r-project.org/"))
---
title: "Future Scope and Refernces"
---
title: "Future Scope and Refernces"
